{"version":3,"sources":["components/ChatAppProps.jsx","components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/LoginForm.jsx","components/ChatFeed.jsx","App.js","index.js"],"names":["ChatAppProps","MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","bind","this","SendOutlined","MyMessage","message","attachments","lenhgt","src","attachment","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","LoginForm","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","onNewMessage","Audio","play","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37899a98.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction ChatAppProps() {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatAppProps\r\n","import React, { useState } from 'react'\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\n\r\n\r\nfunction MessageForm(props) {\r\n    const [value, setValue] = useState('');\r\n    const { chatId, creds } = props;\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    \r\n        isTyping(props, chatId);\r\n      };\r\n\r\n      const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n    \r\n        const text = value.trim();\r\n    \r\n        if (text.length > 0) {\r\n          sendMessage(creds, chatId, { text });\r\n        }\r\n    \r\n        setValue('');\r\n      };\r\n\r\n      const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, { files: event.target.files, text: '' });\r\n      };\r\n    \r\n\r\n    return (\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input\r\n                className=\"message-input\"\r\n                placeholder=\"Send a message...\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\">\r\n                    <PictureOutlined className=\"picture-icon\" />\r\n                </span>\r\n            </label>\r\n            <input\r\n                type=\"file\"\r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style={{ display: 'none' }}\r\n                onChange={handleUpload.bind(this)}\r\n            />\r\n            <button type=\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\" />\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MessageForm\r\n","\r\nfunction MyMessage({ message }) {\r\n    if (message.attachments && message.attachments.lenhgt > 0)\r\n        return (\r\n            <img\r\n                src={message.attachment[0].file}  // the file is location system for the file\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style={{ float: \"right\" }}\r\n\r\n            />\r\n        )\r\n    return (\r\n        <div className=\"message\" style={{ float: \"right\", marginRight: \"18px\", color: \"white\", backgroundColor: \"#3B2A50\" }} >\r\n            {message.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyMessage\r\n","\r\nfunction TheirMessage({ lastMessage, message }) {\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n    return (\r\n        <div className=\"message-row\">\r\n            {isFirstMessageByUser && (\r\n                <div\r\n                    className=\"message-avatar\"\r\n                    style={{ backgroundImage: message.sender && `url(${message.sender.avatar})` }}\r\n                />\r\n            )}\r\n            {message.attachments && message.attachments.length > 0\r\n                ? (\r\n                    <img\r\n                      src={message.attachments[0].file}\r\n                      alt=\"message-attachment\"\r\n                      className=\"message-image\"\r\n                      style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n                    />\r\n                  )\r\n                  : (\r\n                    <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\r\n                      {message.text}\r\n                    </div>\r\n                  )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TheirMessage\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nconst projectID = \"40e40ecf-ed8c-4b64-a080-b01de30c3d7a\"\r\n\r\nfunction LoginForm() {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const authObject = { 'Project-ID': projectID, 'User-Name': username, 'User-Secret': password };\r\n\r\n        try {\r\n            await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n\r\n            localStorage.setItem('username', username);\r\n            localStorage.setItem('password', password);\r\n\r\n            window.location.reload();\r\n            setError('');\r\n        } catch (err) {\r\n            setError('Oops, incorrect credentials.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\">Chat Application</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\r\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"button\">\r\n                            <span>Start chatting</span>\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <h1>{error}</h1>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import { MyMessage, TheirMessage, MessageForm } from '../components'\r\n\r\n\r\n\r\nfunction ChatFeed(props) {\r\n    const { chats, activeChat, userName, messages } = props;\r\n\r\n    const chat = chats && chats[activeChat];\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => person.last_read === message.id && (\r\n        <div\r\n            key={`read_${index}`}\r\n            className=\"read-receipt\"\r\n            style={{\r\n                float: isMyMessage ? 'right' : 'left',\r\n                backgroundImage: person.person.avatar && `url(${person.person.avatar})`,\r\n            }}\r\n        />\r\n    ));\r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages);\r\n        return keys.map((key, index) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n            const isMyMessage = userName === message.sender.userName;\r\n\r\n            return (\r\n                <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n                    <div className=\"message-block\">\r\n                        {isMyMessage\r\n                            ? <MyMessage message={message} />\r\n                            : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />}\r\n                    </div>\r\n                    <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n\r\n    if (!chat) return <div />;\r\n\r\n    return (\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">{chat?.title}</div>\r\n                <div className=\"chat-subtitle\">\r\n                    {chat.people.map((person) => ` ${person.person.username}`)}\r\n                </div>\r\n                {renderMessages()}\r\n                <div style={{ height: \"100px\" }}></div>\r\n                <div className=\"message-from-container\"></div>\r\n                <MessageForm {...props} chatId={activeChat} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatFeed\r\n","import { ChatEngine } from 'react-chat-engine';\nimport './App.css';\nimport ChatFeed from './components/ChatFeed';\nimport chatAppProps from './components/ChatAppProps';\nimport LoginForm  from './components/LoginForm'\n\n\n\nfunction App() {\n\n  if (!localStorage.getItem('username')) return <LoginForm />;\n\n  return (\n    <div className=\"App\">\n      <ChatEngine\n      height=\"100vh\" \n      projectID={\"40e40ecf-ed8c-4b64-a080-b01de30c3d7a\"}\n      userName={\"Fuad\"}\n      userSecret={\"123456\"}\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} /> }\n      onNewMessage = {() => new Audio('https://chat-engine-assets.s3.amazonaws.com/click.mp3').play}\n      />\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n </React.StrictMode>, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}